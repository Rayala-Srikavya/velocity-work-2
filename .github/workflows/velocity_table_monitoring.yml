name: Detecting and logging new tables in Velocity

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:  
      SNOWSQL_ACCOUNT: "JSRPZNS-DEVELOPMENT_ENVIRONMENT"
      SNOWSQL_USER: "ADV_SERVICE_USER"
      SNOWSQL_ROLE: "ACCOUNTADMIN"
      SNOWSQL_DATABASE: "CONFIG_CLOUD_VELOCITY"
      SNOWSQL_CUST_SCHEMA: "CONFIG"
      SNOWSQL_MAIN_LOCATOR: ${{ vars.MAIN_LOCATOR }
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_CLD }}
      SNOWSQL_PRIVATE_KEY_PASSPHRASE: ${{ secrets.SNOWSQL_PRIVATE_KEY_PASSPHRASE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Load 1password service
        uses: 1password/load-secrets-action@v2
        with:
          unset-previous: true
          
      - name: Install SnowSQL
        run: |
          sudo apt-get update && sudo apt-get install -y curl gzip
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.3/linux_x86_64/snowsql-1.3.2-linux_x86_64.bash
          SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.3.2-linux_x86_64.bash
          echo 'export PATH=~/snowflake/snowsql:$PATH' >> ~/.bashrc
          source ~/.bashrc

      - name: Fetch Snowflake Private Key and Passphrase from 1Password
        run: |
          echo "Fetching credentials from 1Password..."

          base="op://Snowflake_Sub_accounts/"
          field="/private_key_phrase"
          op_value="${base}${SNOWSQL_USER}${field}"
          MAIN_PASSPHRASE=$(echo "${op_value}" | op inject)
          echo "SNOWSQL_PRIVATE_KEY_PASSPHRASE=$MAIN_PASSPHRASE" >> $GITHUB_ENV

          # Clean up old key file
          if [ -f "$GITHUB_WORKSPACE/main_private_key" ]; then
            rm $GITHUB_WORKSPACE/main_private_key
          fi

          # Fetch and write private key
          field="/private_key"
          op_value="${base}${SNOWSQL_USER}${field}"
          ADV_RSA_PRIVATE_KEY=$(echo "${op_value}" | op inject)
          main_escaped_private_key=$(echo "${ADV_RSA_PRIVATE_KEY}" | awk '{printf "%s\\n", $0}')
          echo -e "$main_escaped_private_key" > $GITHUB_WORKSPACE/main_private_key
          chmod 600 $GITHUB_WORKSPACE/main_private_key

      - name: Run SnowSQL Scripts
        run: |
          cat <<EOF > deploy.sql
          USE ROLE ${SNOWSQL_ROLE};
          USE DATABASE ${SNOWSQL_CUST_SCHEMA};
          USE SCHEMA CONFIG;

          --Step 1: Run setup scripts
          !source sql/01_create_known_tables.sql;
          !source sql/02_create_alert_log.sql;
          !source sql/03_create_procedure.sql;
          !source sql/04_create_task.sql;
          !source sql/05_create_alert.sql;

          --Step 2: Resume Task and Alert
          ALTER TASK CONFIG.detect_new_tables_velocity_task RESUME;
          ALTER ALERT CONFIG.new_table_velocity_alert RESUME;

          --Step 3: Trigger procedure manually
          CALL CONFIG.velocity_detect_new_tables_all_schemas();
          EOF

          ~/snowflake/snowsql \
            -a "${SNOWSQL_ACCOUNT}" \
            -u "${SNOWSQL_USER}" \
            --private-key-path "$GITHUB_WORKSPACE/main_private_key" \
            --private-key-passphrase "${SNOWSQL_PRIVATE_KEY_PASSPHRASE}" \
            -d "${SNOWSQL_CUST_SCHEMA}" \
            -r "${SNOWSQL_ROLE}" \
            -w "${SNOWSQL_WAREHOUSE}" \
            -f deploy.sql

